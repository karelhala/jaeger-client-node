{"version":3,"sources":["../../test/udp_sender.js"],"names":["_lodash","require","_lodash2","_interopRequireDefault","_chai","_const_sampler","_const_sampler2","_dgram","_dgram2","_fs","_fs2","_path","_path2","_in_memory_reporter","_in_memory_reporter2","_opentracing","_opentracing2","_tracer","_tracer2","_thriftrw","_thrift","_thrift2","_udp_sender","_udp_sender2","obj","__esModule","default","PORT","HOST","describe","server","tracer","thrift","sender","assertThriftSpanEqual","assert","spanOne","spanTwo","deepEqual","traceIdLow","traceIdHigh","spanId","parentSpanId","equal","operationName","references","flags","startTime","duration","beforeEach","createSocket","bind","reporter","setProcess","_process","Thrift","source","readFileSync","join","__dirname","allowOptionalArguments","afterEach","close","it","done","startSpan","finish","spanToThrift","maxSpanBytes","_calcSpanSize","_maxSpanBytes","on","msg","remote","thriftObj","Agent","emitBatch","argumentsMessageRW","readFrom","batch","value","body","isOk","spans","length","process","serviceName","actualTags","sortBy","tags","o","key","append","flush","parentContext","context","childOfContext","childOfRef","Reference","REFERENCE_CHILD_OF","followsFromContext","followsFromRef","REFERENCE_FOLLOWS_FROM","options","traceId","parentId","each","span","childOf","ref","expectedTraceId","expectedParentId","isNotOk","spanSize","responseOne","responseTwo","err","numSpans","_batch","_byteBufferSize","spanThatExceedsCapacity","setTag","expectedBufferSize","response"],"mappings":"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","file":"udp_sender.js","sourcesContent":["'use strict';\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _chai = require('chai');\n\nvar _const_sampler = require('../src/samplers/const_sampler.js');\n\nvar _const_sampler2 = _interopRequireDefault(_const_sampler);\n\nvar _dgram = require('dgram');\n\nvar _dgram2 = _interopRequireDefault(_dgram);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _in_memory_reporter = require('../src/reporters/in_memory_reporter.js');\n\nvar _in_memory_reporter2 = _interopRequireDefault(_in_memory_reporter);\n\nvar _opentracing = require('opentracing');\n\nvar _opentracing2 = _interopRequireDefault(_opentracing);\n\nvar _tracer = require('../src/tracer.js');\n\nvar _tracer2 = _interopRequireDefault(_tracer);\n\nvar _thriftrw = require('thriftrw');\n\nvar _thrift = require('../src/thrift.js');\n\nvar _thrift2 = _interopRequireDefault(_thrift);\n\nvar _udp_sender = require('../src/reporters/udp_sender.js');\n\nvar _udp_sender2 = _interopRequireDefault(_udp_sender);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar PORT = 6832;\nvar HOST = '127.0.0.1';\n\ndescribe('udp sender should', function () {\n    var server = void 0;\n    var tracer = void 0;\n    var thrift = void 0;\n    var sender = void 0;\n\n    function assertThriftSpanEqual(assert, spanOne, spanTwo) {\n        assert.deepEqual(spanOne.traceIdLow, spanTwo.traceIdLow);\n        assert.deepEqual(spanOne.traceIdHigh, spanTwo.traceIdHigh);\n        assert.deepEqual(spanOne.spanId, spanTwo.spanId);\n        assert.deepEqual(spanOne.parentSpanId, spanTwo.parentSpanId);\n        assert.equal(spanOne.operationName, spanTwo.operationName);\n        assert.deepEqual(spanOne.references, spanTwo.references);\n        assert.equal(spanOne.flags, spanTwo.flags);\n        assert.deepEqual(spanOne.startTime, spanTwo.startTime);\n        assert.deepEqual(spanOne.duration, spanTwo.duration);\n    }\n\n    beforeEach(function () {\n        server = _dgram2.default.createSocket('udp4');\n        server.bind(PORT, HOST);\n        var reporter = new _in_memory_reporter2.default();\n        tracer = new _tracer2.default('test-service-name', reporter, new _const_sampler2.default(true));\n        sender = new _udp_sender2.default();\n        sender.setProcess(reporter._process);\n        thrift = new _thriftrw.Thrift({\n            source: _fs2.default.readFileSync(_path2.default.join(__dirname, '../src/jaeger-idl/thrift/jaeger.thrift'), 'ascii'),\n            allowOptionalArguments: true\n        });\n    });\n\n    afterEach(function () {\n        tracer.close();\n        server.close();\n    });\n\n    it('read and verify spans and process sent', function (done) {\n        var spanOne = tracer.startSpan('operation-one');\n        spanOne.finish(); // finish to set span duration\n        spanOne = _thrift2.default.spanToThrift(spanOne);\n        var spanTwo = tracer.startSpan('operation-two');\n        spanTwo.finish(); // finish to set span duration\n        spanTwo = _thrift2.default.spanToThrift(spanTwo);\n\n        // make sure sender can fit both spans\n        var maxSpanBytes = sender._calcSpanSize(spanOne) + sender._calcSpanSize(spanTwo) + 30;\n        sender._maxSpanBytes = maxSpanBytes;\n\n        server.on('message', function (msg, remote) {\n            var thriftObj = thrift.Agent.emitBatch.argumentsMessageRW.readFrom(msg, 0);\n            var batch = thriftObj.value.body.batch;\n            _chai.assert.isOk(batch);\n            _chai.assert.equal(batch.spans.length, 2);\n\n            assertThriftSpanEqual(_chai.assert, spanOne, batch.spans[0]);\n            assertThriftSpanEqual(_chai.assert, spanTwo, batch.spans[1]);\n\n            _chai.assert.equal(batch.process.serviceName, 'test-service-name');\n            var actualTags = _lodash2.default.sortBy(batch.process.tags, function (o) {\n                return o.key;\n            });\n            _chai.assert.equal(actualTags.length, 3);\n            _chai.assert.equal(actualTags[0].key, 'jaeger.hostname');\n            _chai.assert.equal(actualTags[1].key, 'jaeger.version');\n            _chai.assert.equal(actualTags[2].key, 'peer.ipv4');\n\n            sender.close();\n            done();\n        });\n\n        sender.append(spanOne);\n        sender.append(spanTwo);\n        sender.flush();\n    });\n\n    describe('span reference tests', function () {\n        var tracer = new _tracer2.default('test-service-name', new _in_memory_reporter2.default(), new _const_sampler2.default(true));\n        var parentContext = tracer.startSpan('just-used-for-context').context();\n        var childOfContext = tracer.startSpan('just-used-for-context').context();\n        var childOfRef = new _opentracing2.default.Reference(_opentracing2.default.REFERENCE_CHILD_OF, childOfContext);\n        var followsFromContext = tracer.startSpan('just-used-for-context').context();\n        var followsFromRef = new _opentracing2.default.Reference(_opentracing2.default.REFERENCE_FOLLOWS_FROM, followsFromContext);\n\n        var options = [{ 'childOf': null, 'references': [], 'expectedTraceId': null, 'expectedParentId': null }, { 'childOf': parentContext, 'references': [], 'expectedTraceId': parentContext.traceId, 'expectedParentId': parentContext.parentId }, { 'childOf': parentContext, 'references': [followsFromRef], 'expectedTraceId': parentContext.traceId, 'expectedParentId': parentContext.parentId }, { 'childOf': parentContext, 'references': [childOfRef, followsFromRef], 'expectedTraceId': parentContext.traceId, 'expectedParentId': parentContext.parentId }, { 'childOf': null, 'references': [childOfRef], 'expectedTraceId': childOfContext.traceId, 'expectedParentId': childOfContext.parentId }, { 'childOf': null, 'references': [followsFromRef], 'expectedTraceId': followsFromContext.traceId, 'expectedParentId': followsFromContext.parentId }, { 'childOf': null, 'references': [childOfRef, followsFromRef], 'expectedTraceId': childOfContext.traceId, 'expectedParentId': childOfContext.parentId }];\n\n        _lodash2.default.each(options, function (o) {\n            it('span references serialize', function (done) {\n\n                var span = tracer.startSpan('bender', {\n                    childOf: o.childOf,\n                    references: o.references\n                });\n                span.finish();\n                span = _thrift2.default.spanToThrift(span);\n\n                server.on('message', function (msg, remote) {\n                    var thriftObj = thrift.Agent.emitBatch.argumentsMessageRW.readFrom(msg, 0);\n                    var batch = thriftObj.value.body.batch;\n                    var span = batch.spans[0];\n                    var ref = span.references[0];\n\n                    _chai.assert.isOk(batch);\n                    assertThriftSpanEqual(_chai.assert, span, batch.spans[0]);\n                    if (o.expectedTraceId) {\n                        _chai.assert.deepEqual(span.traceIdLow, o.expectedTraceId);\n                    }\n\n                    if (o.expectedParentId) {\n                        _chai.assert.deepEqual(span.parentId, o.expectedParentId);\n                    } else {\n                        _chai.assert.isNotOk(span.parentId);\n                    }\n\n                    sender.close();\n                    done();\n                });\n\n                sender.append(span);\n                sender.flush();\n            });\n        });\n    });\n\n    it('flush spans when capacity is reached', function () {\n        var spanOne = tracer.startSpan('operation-one');\n        spanOne.finish(); // finish to set span duration\n        spanOne = _thrift2.default.spanToThrift(spanOne);\n        sender._maxSpanBytes = 1;\n        var spanSize = sender._calcSpanSize(spanOne);\n        sender._maxSpanBytes = spanSize * 2;\n\n        var responseOne = sender.append(spanOne);\n        var responseTwo = sender.append(spanOne);\n\n        _chai.assert.equal(responseOne.err, false);\n        _chai.assert.equal(responseOne.numSpans, 0);\n        _chai.assert.equal(responseTwo.err, false);\n        _chai.assert.equal(responseTwo.numSpans, 2);\n\n        _chai.assert.equal(sender._batch.spans.length, 0);\n        _chai.assert.equal(sender._byteBufferSize, 0);\n    });\n\n    it('flush spans when just over capacity', function () {\n        var spanOne = tracer.startSpan('operation-one');\n        spanOne.finish(); // finish to set span duration\n        spanOne = _thrift2.default.spanToThrift(spanOne);\n        var spanSize = sender._calcSpanSize(spanOne);\n        sender._maxSpanBytes = spanSize * 2;\n\n        var spanThatExceedsCapacity = tracer.startSpan('bigger-span');\n        spanThatExceedsCapacity.setTag('some-key', 'some-value');\n        spanThatExceedsCapacity.finish(); // finish to set span duration\n        spanThatExceedsCapacity = _thrift2.default.spanToThrift(spanThatExceedsCapacity);\n\n        var responseOne = sender.append(spanOne);\n        var responseTwo = sender.append(spanThatExceedsCapacity);\n        var expectedBufferSize = sender._calcSpanSize(spanThatExceedsCapacity);\n\n        _chai.assert.equal(sender._batch.spans.length, 1);\n        _chai.assert.equal(sender._byteBufferSize, expectedBufferSize);\n        _chai.assert.equal(responseOne.err, false);\n        _chai.assert.equal(responseOne.numSpans, 0);\n        _chai.assert.equal(responseTwo.err, false);\n        _chai.assert.equal(responseTwo.numSpans, 1);\n    });\n\n    it('flush returns error, on failed buffer conversion', function () {\n        var span = tracer.startSpan('leela');\n        span.finish(); // finish to set span duration\n        span = _thrift2.default.spanToThrift(span);\n        span.flags = 'string'; // malform the span to create a serialization error\n        sender.append(span);\n        var response = sender.flush();\n        _chai.assert.isOk(response.err);\n        _chai.assert.equal(response.numSpans, 1);\n    });\n\n    it('return error response on span too large', function () {\n        var span = tracer.startSpan('op-name');\n        span.finish(); // otherwise duration will be undefined\n\n        sender._maxSpanBytes = 1;\n        var response = sender.append(_thrift2.default.spanToThrift(span));\n        _chai.assert.isOk(response.err);\n        _chai.assert.equal(response.numSpans, 1);\n        sender.flush();\n\n        // cleanup\n        sender.close();\n    });\n\n    it('flush with no spans returns false for error, and 0', function () {\n        var response = sender.flush();\n\n        _chai.assert.equal(response.err, false);\n        _chai.assert.equal(response.numSpans, 0);\n    });\n});\n//# sourceMappingURL=udp_sender.js.map"]}