{"version":3,"sources":["../../../test/samplers/ratelimiting_sampler_test.js"],"names":["_chai","require","_probabilistic_sampler","_probabilistic_sampler2","_interopRequireDefault","_ratelimiting_sampler","_ratelimiting_sampler2","_sinon","_sinon2","obj","__esModule","default","describe","it","initialDate","Date","getTime","clock","useFakeTimers","sampler","i","assert","equal","isSampled","maxTracesPerSecond","isNotOk","tags","decision","deepEqual","restore","expect","to","throw","otherSampler","isOk"],"mappings":"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","file":"ratelimiting_sampler_test.js","sourcesContent":["'use strict';\n\nvar _chai = require('chai');\n\nvar _probabilistic_sampler = require('../../src/samplers/probabilistic_sampler.js');\n\nvar _probabilistic_sampler2 = _interopRequireDefault(_probabilistic_sampler);\n\nvar _ratelimiting_sampler = require('../../src/samplers/ratelimiting_sampler.js');\n\nvar _ratelimiting_sampler2 = _interopRequireDefault(_ratelimiting_sampler);\n\nvar _sinon = require('sinon');\n\nvar _sinon2 = _interopRequireDefault(_sinon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ndescribe('RateLimitingSampler should', function () {\n    it('block after threshold is met', function () {\n        var initialDate = new Date(2011, 9, 1).getTime();\n        var clock = _sinon2.default.useFakeTimers(initialDate);\n        var sampler = new _ratelimiting_sampler2.default(10);\n        for (var i = 0; i < 10; i++) {\n            _chai.assert.equal(sampler.isSampled('operation', {}), true, 'expected decision to be true');\n        }\n\n        _chai.assert.equal(sampler.maxTracesPerSecond, 10);\n        _chai.assert.isNotOk(sampler.equal(new _probabilistic_sampler2.default(0.5)));\n\n        var tags = {};\n        var decision = sampler.isSampled('operation', tags);\n        _chai.assert.equal(decision, false, 'expected decision to be false');\n        _chai.assert.deepEqual(tags, {}, 'expected tags to be empty');\n\n        clock = _sinon2.default.useFakeTimers(initialDate + 1000);\n        tags = {};\n        decision = sampler.isSampled('operation', tags);\n        _chai.assert.equal(decision, true, 'expected decision to be true');\n        _chai.assert.deepEqual(tags, { 'sampler.type': 'ratelimiting', 'sampler.param': 10 });\n        clock.restore();\n    });\n\n    it('should throw error when initialized with an incorrect value', function () {\n        (0, _chai.expect)(function () {\n            new _ratelimiting_sampler2.default(-2.0);\n        }).to.throw('maxTracesPerSecond must be greater than 0.0.  Received -2');\n    });\n\n    it('should equal another rate limiting sampler', function () {\n        var sampler = new _ratelimiting_sampler2.default(1.0);\n        var otherSampler = new _ratelimiting_sampler2.default(1.0);\n\n        _chai.assert.isOk(sampler.equal(otherSampler));\n    });\n\n    it('work with maxCreditsPerSecond smaller than 1', function () {\n        var initialDate = new Date(2011, 9, 1).getTime();\n        var clock = _sinon2.default.useFakeTimers(initialDate);\n        var sampler = new _ratelimiting_sampler2.default(0.1);\n\n        _chai.assert.equal(sampler.isSampled('operation', {}), true, 'expected decision to be true');\n\n        clock = _sinon2.default.useFakeTimers(initialDate + 10000);\n        _chai.assert.equal(sampler.isSampled('operation', {}), true, 'expected decision to be true');\n        clock.restore();\n    });\n});\n//# sourceMappingURL=ratelimiting_sampler_test.js.map"]}