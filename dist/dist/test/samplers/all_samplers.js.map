{"version":3,"sources":["../../../test/samplers/all_samplers.js"],"names":["_chai","require","_sinon","_sinon2","_interopRequireDefault","_constants","constants","_interopRequireWildcard","_const_sampler","_const_sampler2","_probabilistic_sampler","_probabilistic_sampler2","_ratelimiting_sampler","_ratelimiting_sampler2","_guaranteed_throughput_sampler","_guaranteed_throughput_sampler2","_per_operation_sampler","_per_operation_sampler2","_remote_sampler","_remote_sampler2","_combinations","_combinations2","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","describe","samplers","useCallback","sampler","defaultLowerBoundTracesPerSecond","defaultSamplingProbability","perOperationStrategies","forEach","o","it","description","closeCallback","spy","close","assert","calledOnce","SAMPLER_TYPE_CONST","param","decision","SAMPLER_TYPE_PROBABILISTIC","SAMPLER_TYPE_RATE_LIMITING","samplerSetup","toString","expectedTags","expectedDecision","SAMPLER_TYPE_TAG_KEY","SAMPLER_PARAM_TAG_KEY","actualTags","isSampled","equal","deepEqual","before","isOk","otherSampler","equals","isNotOk","expect","to","throw","tags"],"mappings":"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","file":"all_samplers.js","sourcesContent":["'use strict';\n\nvar _chai = require('chai');\n\nvar _sinon = require('sinon');\n\nvar _sinon2 = _interopRequireDefault(_sinon);\n\nvar _constants = require('../../src/constants.js');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _const_sampler = require('../../src/samplers/const_sampler.js');\n\nvar _const_sampler2 = _interopRequireDefault(_const_sampler);\n\nvar _probabilistic_sampler = require('../../src/samplers/probabilistic_sampler.js');\n\nvar _probabilistic_sampler2 = _interopRequireDefault(_probabilistic_sampler);\n\nvar _ratelimiting_sampler = require('../../src/samplers/ratelimiting_sampler.js');\n\nvar _ratelimiting_sampler2 = _interopRequireDefault(_ratelimiting_sampler);\n\nvar _guaranteed_throughput_sampler = require('../../src/samplers/guaranteed_throughput_sampler.js');\n\nvar _guaranteed_throughput_sampler2 = _interopRequireDefault(_guaranteed_throughput_sampler);\n\nvar _per_operation_sampler = require('../../src/samplers/per_operation_sampler.js');\n\nvar _per_operation_sampler2 = _interopRequireDefault(_per_operation_sampler);\n\nvar _remote_sampler = require('../../src/samplers/remote_sampler.js');\n\nvar _remote_sampler2 = _interopRequireDefault(_remote_sampler);\n\nvar _combinations = require('../lib/combinations.js');\n\nvar _combinations2 = _interopRequireDefault(_combinations);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ndescribe('All samplers', function () {\n    describe('should support close()', function () {\n        var samplers = (0, _combinations2.default)({\n            useCallback: [true, false],\n            sampler: [new _const_sampler2.default(true), new _const_sampler2.default(false), new _probabilistic_sampler2.default(0.5), new _ratelimiting_sampler2.default(2), new _guaranteed_throughput_sampler2.default(2, 0.5), new _per_operation_sampler2.default({\n                defaultLowerBoundTracesPerSecond: 2,\n                defaultSamplingProbability: 0.01,\n                perOperationStrategies: []\n            }, 200), new _remote_sampler2.default('some-service-name')]\n        });\n\n        samplers.forEach(function (o) {\n            it(o.description, function () {\n                if (o.useCallback) {\n                    var closeCallback = _sinon2.default.spy();\n                    o.sampler.close(closeCallback);\n                    (0, _chai.assert)(closeCallback.calledOnce);\n                } else {\n                    o.sampler.close();\n                }\n            });\n        });\n    });\n\n    describe('should return correct tags', function () {\n        var samplers = [{ sampler: new _const_sampler2.default(true), 'type': constants.SAMPLER_TYPE_CONST, param: true, decision: true }, { sampler: new _const_sampler2.default(false), 'type': constants.SAMPLER_TYPE_CONST, param: false, decision: false }, { sampler: new _probabilistic_sampler2.default(1.0), 'type': constants.SAMPLER_TYPE_PROBABILISTIC, param: 1.0, decision: true }, { sampler: new _ratelimiting_sampler2.default(2), 'type': constants.SAMPLER_TYPE_RATE_LIMITING, param: 2, decision: true }, {\n            sampler: new _remote_sampler2.default('some-caller-name', { sampler: new _probabilistic_sampler2.default(1.0) }),\n            'type': constants.SAMPLER_TYPE_PROBABILISTIC,\n            param: 1.0,\n            decision: true\n        }];\n\n        samplers.forEach(function (samplerSetup) {\n            var sampler = samplerSetup['sampler'];\n            it(sampler.toString(), function () {\n                var expectedTags = {};\n                var expectedDecision = !!samplerSetup['decision'];\n                var description = sampler.toString() + ', param=' + samplerSetup['param'];\n\n                if (expectedDecision) {\n                    expectedTags[constants.SAMPLER_TYPE_TAG_KEY] = samplerSetup['type'];\n                    expectedTags[constants.SAMPLER_PARAM_TAG_KEY] = samplerSetup['param'];\n                }\n                var actualTags = {};\n                var decision = sampler.isSampled('operation', actualTags);\n                _chai.assert.equal(decision, expectedDecision, description);\n                _chai.assert.deepEqual(actualTags, expectedTags, description);\n            });\n        });\n    });\n});\n\ndescribe('ConstSampler', function () {\n    var sampler = void 0;\n    before(function () {\n        sampler = new _const_sampler2.default(true);\n    });\n\n    it('decision reflects given parameter', function () {\n        _chai.assert.isOk(sampler.decision);\n    });\n\n    it('does NOT equal another type of sampler', function () {\n        var otherSampler = new _probabilistic_sampler2.default(0.5);\n        var equals = sampler.equal(otherSampler);\n        _chai.assert.isNotOk(equals);\n    });\n\n    it('does equal the same type of sampler', function () {\n        var otherSampler = new _const_sampler2.default(true);\n        var equals = sampler.equal(otherSampler);\n        _chai.assert.isOk(equals);\n    });\n});\n\ndescribe('ProbabilisticSampler', function () {\n    it('throws error on out of range sampling rate', function () {\n        (0, _chai.expect)(function () {\n            new _probabilistic_sampler2.default(2.0);\n        }).to.throw('The sampling rate must be less than 0.0 and greater than 1.0. Received 2');\n    });\n\n    it('calls is Sampled, and returns false', function () {\n        var sampler = new _probabilistic_sampler2.default(0.0);\n        var tags = {};\n        _chai.assert.isNotOk(sampler.isSampled('operation', tags));\n        _chai.assert.deepEqual(tags, {});\n    });\n});\n//# sourceMappingURL=all_samplers.js.map"]}