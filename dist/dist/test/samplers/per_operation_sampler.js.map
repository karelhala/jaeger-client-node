{"version":3,"sources":["../../../test/samplers/per_operation_sampler.js"],"names":["_chai","require","_sinon","_sinon2","_interopRequireDefault","_per_operation_sampler","_per_operation_sampler2","obj","__esModule","default","describe","strategies","defaultLowerBoundTracesPerSecond","defaultSamplingProbability","perOperationStrategies","operation","probabilisticSampling","samplingRate","it","sampler","assert","equal","name","callback","spy","close","calledOnce","_maxOperations","_defaultLowerBound","isObject","_defaultSampler","Object","keys","_samplersByOperation","length","s1","_probabilisticSampler","exp","mock","expects","exactly","withExactArgs","isSampled","verify","updated","isUpdated","update","isTrue","s2","s0","isFalse","strictEqual"],"mappings":"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","file":"per_operation_sampler.js","sourcesContent":["'use strict';\n\nvar _chai = require('chai');\n\nvar _sinon = require('sinon');\n\nvar _sinon2 = _interopRequireDefault(_sinon);\n\nvar _per_operation_sampler = require('../../src/samplers/per_operation_sampler');\n\nvar _per_operation_sampler2 = _interopRequireDefault(_per_operation_sampler);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ndescribe('PerOperationSampler', function () {\n\n    var strategies = {\n        defaultLowerBoundTracesPerSecond: 1.1,\n        defaultSamplingProbability: 0.123,\n        perOperationStrategies: [{\n            operation: 'op1',\n            probabilisticSampling: { samplingRate: 0.5 }\n        }]\n    };\n\n    it('should have a name and be closable', function () {\n        var sampler = new _per_operation_sampler2.default(strategies, 0);\n        _chai.assert.equal(sampler.name(), 'PerOperationSampler');\n\n        var callback = _sinon2.default.spy();\n        sampler.close(callback);\n        (0, _chai.assert)(callback.calledOnce);\n\n        sampler = new _per_operation_sampler2.default(strategies, 0);\n        sampler.close(); // close without callback\n\n        sampler.equal(sampler); // for coverate only\n    });\n\n    it('should parse initial strategies', function () {\n        var sampler = new _per_operation_sampler2.default(strategies, 2);\n        _chai.assert.equal(sampler._maxOperations, 2);\n        _chai.assert.equal(sampler._defaultLowerBound, 1.1);\n        _chai.assert.isObject(sampler._defaultSampler);\n        _chai.assert.equal(sampler._defaultSampler.samplingRate, 0.123);\n        _chai.assert.equal(Object.keys(sampler._samplersByOperation).length, 1);\n        var s1 = sampler._samplersByOperation['op1'];\n        _chai.assert.isObject(s1);\n        _chai.assert.isObject(s1._probabilisticSampler);\n        _chai.assert.equal(s1._probabilisticSampler.samplingRate, 0.5);\n    });\n\n    it('should use per-op sampler', function () {\n        var sampler = new _per_operation_sampler2.default(strategies, 2);\n        var s1 = sampler._samplersByOperation['op1'];\n        var exp = _sinon2.default.mock(s1).expects('isSampled');\n        exp.exactly(2);\n        exp.withExactArgs('op1', {});\n        sampler.isSampled('op1', {});\n        sampler.isSampled('op1', {});\n        exp.verify();\n        _chai.assert.equal(Object.keys(sampler._samplersByOperation).length, 1);\n    });\n\n    it('should add per-op samplers up to maxOperations', function () {\n        var sampler = new _per_operation_sampler2.default(strategies, 2);\n        sampler.isSampled('op2', {});\n        _chai.assert.equal(Object.keys(sampler._samplersByOperation).length, 2);\n    });\n\n    it('should fallback to probabilistic sampler after maxOperations', function () {\n        var sampler = new _per_operation_sampler2.default(strategies, 1); // maxOperation = 1\n        var s1 = sampler._defaultSampler;\n        var exp = _sinon2.default.mock(s1).expects('isSampled');\n        exp.exactly(2);\n        sampler.isSampled('op2', {});\n        sampler.isSampled('op3', {});\n        _chai.assert.equal(Object.keys(sampler._samplersByOperation).length, 1);\n        exp.verify();\n    });\n\n    it('should update samplers', function () {\n        var sampler = new _per_operation_sampler2.default(strategies, 2);\n        var updated = {\n            defaultLowerBoundTracesPerSecond: 2,\n            defaultSamplingProbability: 0.333,\n            perOperationStrategies: [{\n                operation: 'op1',\n                probabilisticSampling: { samplingRate: 0.01 }\n            }, {\n                operation: 'op2',\n                probabilisticSampling: { samplingRate: 0.001 }\n            }]\n        };\n        var isUpdated = sampler.update(updated);\n        _chai.assert.isTrue(isUpdated);\n        _chai.assert.equal(sampler._defaultLowerBound, 2);\n        _chai.assert.isObject(sampler._defaultSampler);\n        _chai.assert.equal(sampler._defaultSampler.samplingRate, 0.333);\n        _chai.assert.equal(Object.keys(sampler._samplersByOperation).length, 2);\n        var s1 = sampler._samplersByOperation['op1'];\n        _chai.assert.isObject(s1);\n        _chai.assert.isObject(s1._probabilisticSampler);\n        _chai.assert.equal(s1._probabilisticSampler.samplingRate, 0.01);\n        var s2 = sampler._samplersByOperation['op2'];\n        _chai.assert.isObject(s2);\n        _chai.assert.isObject(s2._probabilisticSampler);\n        _chai.assert.equal(s2._probabilisticSampler.samplingRate, 0.001);\n    });\n\n    it('should not update samplers if strategies did not change', function () {\n        var strategies = {\n            defaultLowerBoundTracesPerSecond: 2,\n            defaultSamplingProbability: 0.333,\n            perOperationStrategies: [{\n                operation: 'op1',\n                probabilisticSampling: { samplingRate: 0.01 }\n            }, {\n                operation: 'op2',\n                probabilisticSampling: { samplingRate: 0.001 }\n            }]\n        };\n        var sampler = new _per_operation_sampler2.default(strategies, 2);\n        var s0 = sampler._defaultSampler;\n        var s1 = sampler._samplersByOperation['op1'];\n        var s2 = sampler._samplersByOperation['op2'];\n\n        var isUpdated = sampler.update(strategies);\n        _chai.assert.isFalse(isUpdated);\n        _chai.assert.strictEqual(sampler._defaultSampler, s0);\n        _chai.assert.strictEqual(sampler._samplersByOperation['op1'], s1);\n        _chai.assert.strictEqual(sampler._samplersByOperation['op2'], s2);\n    });\n});\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//# sourceMappingURL=per_operation_sampler.js.map"]}