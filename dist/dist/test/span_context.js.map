{"version":3,"sources":["../../test/span_context.js"],"names":["_chai","require","_constants","constants","_interopRequireWildcard","_span_context","_span_context2","_interopRequireDefault","_util","_util2","obj","__esModule","default","newObj","key","Object","prototype","hasOwnProperty","call","describe","LARGEST_64_BUFFER","before","Buffer","writeUInt32BE","it","traceId","encodeInt64","spanId","parentId","flags","context","withBinaryIds","assert","deepEqual","equal","isOk","isSampled","isDebug","_flags","isNotOk","ctx1","toString","ctx2","ctx3","traceIdStr","spanIdStr","parentIdStr","fromString"],"mappings":"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","file":"span_context.js","sourcesContent":["'use strict';\n\nvar _chai = require('chai');\n\nvar _constants = require('../src/constants.js');\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _span_context = require('../src/span_context.js');\n\nvar _span_context2 = _interopRequireDefault(_span_context);\n\nvar _util = require('../src/util.js');\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\ndescribe('SpanContext should', function () {\n    var LARGEST_64_BUFFER = void 0;\n    before(function () {\n        LARGEST_64_BUFFER = new Buffer(8);\n        LARGEST_64_BUFFER.writeUInt32BE(0xffffffff, 0);\n        LARGEST_64_BUFFER.writeUInt32BE(0xffffffff, 4);\n    });\n\n    it('return given values as they were set', function () {\n        var traceId = _util2.default.encodeInt64(1);\n        var spanId = _util2.default.encodeInt64(2);\n        var parentId = _util2.default.encodeInt64(3);\n        var flags = 1;\n\n        var context = _span_context2.default.withBinaryIds(traceId, spanId, parentId, flags);\n\n        _chai.assert.deepEqual(traceId, context.traceId);\n        _chai.assert.deepEqual(spanId, context.spanId);\n        _chai.assert.deepEqual(parentId, context.parentId);\n        _chai.assert.equal(flags, context.flags);\n    });\n\n    it('return IsSampled properly', function () {\n        var context = _span_context2.default.withBinaryIds(_util2.default.encodeInt64(1), _util2.default.encodeInt64(2), _util2.default.encodeInt64(3), 3);\n        _chai.assert.isOk(context.isSampled());\n        _chai.assert.isOk(context.isDebug());\n\n        context._flags = 0;\n        _chai.assert.isNotOk(context.isSampled());\n        _chai.assert.isNotOk(context.isDebug());\n    });\n\n    it('format strings properly with toString', function () {\n        var ctx1 = _span_context2.default.withBinaryIds(_util2.default.encodeInt64(0x100), _util2.default.encodeInt64(0x7f), null, 1);\n        _chai.assert.equal(ctx1.toString(), '100:7f:0:1');\n\n        var ctx2 = _span_context2.default.withBinaryIds(_util2.default.encodeInt64(255 << 4), _util2.default.encodeInt64(127), _util2.default.encodeInt64(256), 0);\n        _chai.assert.equal(ctx2.toString(), 'ff0:7f:100:0');\n\n        // test large numbers\n        var ctx3 = _span_context2.default.withBinaryIds(LARGEST_64_BUFFER, LARGEST_64_BUFFER, LARGEST_64_BUFFER, 0);\n        _chai.assert.equal(ctx3.toString(), 'ffffffffffffffff:ffffffffffffffff:ffffffffffffffff:0');\n        _chai.assert.equal('ffffffffffffffff', ctx3.traceIdStr);\n        _chai.assert.equal('ffffffffffffffff', ctx3.spanIdStr);\n        _chai.assert.equal('ffffffffffffffff', ctx3.parentIdStr);\n    });\n\n    it('turn properly formatted strings into correct span contexts', function () {\n        var context = _span_context2.default.fromString('100:7f:0:1');\n\n        _chai.assert.deepEqual('100', context.traceIdStr);\n        _chai.assert.deepEqual(_util2.default.encodeInt64(0x7f), context.spanId);\n        _chai.assert.equal(null, context.parentId);\n        _chai.assert.equal(1, context.flags);\n\n        // test large numbers\n        context = _span_context2.default.fromString('ffffffffffffffff:ffffffffffffffff:5:1');\n        _chai.assert.equal('ffffffffffffffff', context.traceIdStr);\n        _chai.assert.equal('ffffffffffffffff', context.spanIdStr);\n        _chai.assert.deepEqual(LARGEST_64_BUFFER, context.spanId);\n        _chai.assert.deepEqual(LARGEST_64_BUFFER, context.spanId);\n        _chai.assert.deepEqual(_util2.default.encodeInt64(0x5), context.parentId);\n        _chai.assert.equal(context.flags, 0x1);\n    });\n\n    it('return null on malformed traces', function () {\n        _chai.assert.equal(_span_context2.default.fromString('bad value'), null);\n        _chai.assert.equal(_span_context2.default.fromString('1:1:1:1:1'), null, 'Too many colons');\n        _chai.assert.equal(_span_context2.default.fromString('1:1:1'), null, 'Too few colons');\n        _chai.assert.equal(_span_context2.default.fromString('x:1:1:1'), null, 'Not all numbers');\n        _chai.assert.equal(_span_context2.default.fromString('1:x:1:1'), null, 'Not all numbers');\n        _chai.assert.equal(_span_context2.default.fromString('1:1:x:1'), null, 'Not all numbers');\n        _chai.assert.equal(_span_context2.default.fromString('1:1:1:x'), null, 'Not all numbers');\n        _chai.assert.equal(_span_context2.default.fromString('0:1:1:1'), null, 'Trace ID cannot be zero');\n    });\n});\n//# sourceMappingURL=span_context.js.map"]}