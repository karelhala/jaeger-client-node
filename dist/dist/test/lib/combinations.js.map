{"version":3,"sources":["../../../test/lib/combinations.js"],"names":["Object","defineProperty","exports","value","default","combinations","paramLists","keysParam","combination","arguments","length","undefined","results","keys","descriptionArray","_keys","i","_key","push","description","join","_shallowClone","key","paramList","j","param","slice","obj","newObj","hasOwnProperty"],"mappings":"AAAA;;AAEAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,WAAO;AADkC,CAA7C;AAGAD,QAAQE,OAAR,GAAkBC,YAAlB;;AAGA;;;;;;;;;;AAUA,SAASA,YAAT,CAAsBC,UAAtB,EAAkCC,SAAlC,EAA6C;AACzC,QAAIC,cAAcC,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAAtF;AACA,QAAIG,UAAUH,UAAUC,MAAV,GAAmB,CAAnB,IAAwBD,UAAU,CAAV,MAAiBE,SAAzC,GAAqDF,UAAU,CAAV,CAArD,GAAoE,EAAlF;;AAEA,QAAII,OAAON,aAAaP,OAAOa,IAAP,CAAYP,UAAZ,CAAxB;AACA,QAAIO,KAAKH,MAAL,KAAgB,CAApB,EAAuB;AACnB,YAAII,mBAAmB,EAAvB;AACA,YAAIC,QAAQf,OAAOa,IAAP,CAAYP,UAAZ,CAAZ;AACA,aAAK,IAAIU,IAAI,CAAb,EAAgBA,IAAID,MAAML,MAA1B,EAAkCM,GAAlC,EAAuC;AACnC,gBAAIC,OAAOF,MAAMC,CAAN,CAAX;AACAF,6BAAiBI,IAAjB,CAAsBD,OAAO,GAAP,GAAaT,YAAYS,IAAZ,CAAnC;AACH;AACDT,oBAAYW,WAAZ,GAA0BL,iBAAiBM,IAAjB,CAAsB,GAAtB,CAA1B;AACAR,gBAAQM,IAAR,CAAaG,cAAcb,WAAd,CAAb;AACA,eAAOI,OAAP;AACH;;AAED,QAAIU,MAAMT,KAAK,CAAL,CAAV;AACA,QAAIU,YAAYjB,WAAWgB,GAAX,CAAhB;AACA,SAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAID,UAAUb,MAA9B,EAAsCc,GAAtC,EAA2C;AACvC,YAAIC,QAAQF,UAAUC,CAAV,CAAZ;;AAEAhB,oBAAYc,GAAZ,IAAmBG,KAAnB;AACAb,kBAAUP,aAAaC,UAAb,EAAyBO,KAAKa,KAAL,CAAW,CAAX,CAAzB,EAAwClB,WAAxC,EAAqDI,OAArD,CAAV;AACH;;AAED,WAAOA,OAAP;AACH;;AAED,SAASS,aAAT,CAAuBM,GAAvB,EAA4B;AACxB,QAAIC,SAAS,EAAb;AACA,SAAK,IAAIN,GAAT,IAAgBK,GAAhB,EAAqB;AACjB,YAAIA,IAAIE,cAAJ,CAAmBP,GAAnB,CAAJ,EAA6B;AACzBM,mBAAON,GAAP,IAAcK,IAAIL,GAAJ,CAAd;AACH;AACJ;AACD,WAAOM,MAAP;AACH;AACD","file":"combinations.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = combinations;\n\n\n/**\n * Example:\n * combinations(['encoding', 'mode'], {encoding: ['json', 'thrift'], mode: ['channel', 'request']})\n * Produced combinations:\n *\n * [{ encoding: 'json', mode: 'channel' },\n *  { encoding: 'json', mode: 'request' },\n *  { encoding: 'thrift', mode: 'channel' },\n *  { encoding: 'thrift', mode: 'request' }]\n * */\nfunction combinations(paramLists, keysParam) {\n    var combination = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var results = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    var keys = keysParam || Object.keys(paramLists);\n    if (keys.length === 0) {\n        var descriptionArray = [];\n        var _keys = Object.keys(paramLists);\n        for (var i = 0; i < _keys.length; i++) {\n            var _key = _keys[i];\n            descriptionArray.push(_key + '=' + combination[_key]);\n        }\n        combination.description = descriptionArray.join(',');\n        results.push(_shallowClone(combination));\n        return results;\n    }\n\n    var key = keys[0];\n    var paramList = paramLists[key];\n    for (var j = 0; j < paramList.length; j++) {\n        var param = paramList[j];\n\n        combination[key] = param;\n        results = combinations(paramLists, keys.slice(1), combination, results);\n    }\n\n    return results;\n}\n\nfunction _shallowClone(obj) {\n    var newObj = {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            newObj[key] = obj[key];\n        }\n    }\n    return newObj;\n}\n//# sourceMappingURL=combinations.js.map"]}