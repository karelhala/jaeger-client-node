{"version":3,"sources":["../../../src/reporters/udp_sender.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_dgram","require","_dgram2","_interopRequireDefault","_fs","_fs2","_path","_path2","_thriftrw","obj","__esModule","default","_classCallCheck","instance","TypeError","HOST","PORT","UDP_PACKET_MAX_LENGTH","UDPSender","options","arguments","undefined","_host","host","_port","port","_maxPacketSize","maxPacketSize","_byteBufferSize","_client","createSocket","_spec","readFileSync","join","__dirname","_thrift","Thrift","source","allowOptionalArguments","_calcBatchSize","batch","Agent","emitBatch","argumentsMessageRW","byteLength","_convertBatchToThriftMessage","_batch","_calcSpanSize","span","Span","rw","setProcess","process","_process","tagMessages","j","tags","tag","push","Tag","_thriftProcessMessage","Process","serviceName","_emitSpanBatchOverhead","_maxSpanBytes","append","spanSize","err","numSpans","spans","flush","flushResponse","bufferLen","thriftBuffer","Buffer","bufferResult","writeInto","console","log","send","_reset","spanMessages","ArgumentsMessage","version","id","body","Batch","close"],"mappings":"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","file":"udp_sender.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar _dgram = require('dgram');\n\nvar _dgram2 = _interopRequireDefault(_dgram);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _thriftrw = require('thriftrw');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar HOST = 'localhost';\nvar PORT = 6832;\nvar UDP_PACKET_MAX_LENGTH = 65000;\n\nvar UDPSender = function () {\n    function UDPSender() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _classCallCheck(this, UDPSender);\n\n        this._host = options.host || HOST;\n        this._port = options.port || PORT;\n        this._maxPacketSize = options.maxPacketSize || UDP_PACKET_MAX_LENGTH;\n        this._byteBufferSize = 0;\n        this._client = _dgram2.default.createSocket('udp4');\n        this._spec = _fs2.default.readFileSync(_path2.default.join(__dirname, '../jaeger-idl/thrift/jaeger.thrift'), 'ascii');\n        this._thrift = new _thriftrw.Thrift({\n            source: this._spec,\n            allowOptionalArguments: true\n        });\n    }\n\n    _createClass(UDPSender, [{\n        key: '_calcBatchSize',\n        value: function _calcBatchSize(batch) {\n            return this._thrift.Agent.emitBatch.argumentsMessageRW.byteLength(this._convertBatchToThriftMessage(this._batch)).length;\n        }\n    }, {\n        key: '_calcSpanSize',\n        value: function _calcSpanSize(span) {\n            return this._thrift.Span.rw.byteLength(new this._thrift.Span(span)).length;\n        }\n    }, {\n        key: 'setProcess',\n        value: function setProcess(process) {\n            // This function is only called once during reporter construction, and thus will\n            // give us the length of the batch before any spans have been added to the span\n            // list in batch.\n            this._process = process;\n            this._batch = {\n                'process': this._process,\n                'spans': []\n            };\n\n            var tagMessages = [];\n            for (var j = 0; j < this._batch.process.tags.length; j++) {\n                var tag = this._batch.process.tags[j];\n                tagMessages.push(new this._thrift.Tag(tag));\n            }\n\n            this._thriftProcessMessage = new this._thrift.Process({\n                serviceName: this._batch.process.serviceName,\n                tags: tagMessages\n            });\n            this._emitSpanBatchOverhead = this._calcBatchSize(this._batch);\n            this._maxSpanBytes = this._maxPacketSize - this._emitSpanBatchOverhead;\n        }\n    }, {\n        key: 'append',\n        value: function append(span) {\n            var spanSize = this._calcSpanSize(span);\n            if (spanSize > this._maxSpanBytes) {\n                return { err: true, numSpans: 1 };\n            }\n\n            this._byteBufferSize += spanSize;\n            if (this._byteBufferSize <= this._maxSpanBytes) {\n                this._batch.spans.push(span);\n                if (this._byteBufferSize < this._maxSpanBytes) {\n                    return { err: false, numSpans: 0 };\n                }\n                return this.flush();\n            }\n\n            var flushResponse = this.flush();\n            this._batch.spans.push(span);\n            this._byteBufferSize = spanSize;\n            return flushResponse;\n        }\n    }, {\n        key: 'flush',\n        value: function flush() {\n            var numSpans = this._batch.spans.length;\n            if (numSpans == 0) {\n                return { err: false, numSpans: 0 };\n            }\n\n            var bufferLen = this._byteBufferSize + this._emitSpanBatchOverhead;\n            var thriftBuffer = new Buffer(bufferLen);\n            var bufferResult = this._thrift.Agent.emitBatch.argumentsMessageRW.writeInto(this._convertBatchToThriftMessage(this._batch), thriftBuffer, 0);\n\n            if (bufferResult.err) {\n                console.log('err', bufferResult.err);\n                return { err: true, numSpans: numSpans };\n            }\n\n            // TODO(oibe) use callback in send\n            this._client.send(thriftBuffer, 0, thriftBuffer.length, this._port, this._host);\n            this._reset();\n\n            return { err: false, numSpans: numSpans };\n        }\n    }, {\n        key: '_convertBatchToThriftMessage',\n        value: function _convertBatchToThriftMessage() {\n            var spanMessages = [];\n            for (var i = 0; i < this._batch.spans.length; i++) {\n                var span = this._batch.spans[i];\n                spanMessages.push(new this._thrift.Span(span));\n            }\n\n            return new this._thrift.Agent.emitBatch.ArgumentsMessage({\n                version: 1,\n                id: 0,\n                body: { batch: new this._thrift.Batch({\n                        process: this._thriftProcessMessage,\n                        spans: spanMessages\n                    }) }\n            });\n        }\n    }, {\n        key: '_reset',\n        value: function _reset() {\n            this._batch.spans = [];\n            this._byteBufferSize = 0;\n        }\n    }, {\n        key: 'close',\n        value: function close() {\n            this._client.close();\n        }\n    }]);\n\n    return UDPSender;\n}();\n\nexports.default = UDPSender;\n//# sourceMappingURL=udp_sender.js.map"]}