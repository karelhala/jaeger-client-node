{"version":3,"sources":["../../../../../test/lib/metrics/local/backend.js"],"names":["LocalBackend","reset","_counterValues","_counterTags","_timerValues","_timerTags","_gaugeValues","_gaugeTags","name","delta","tags","undefined","value","counter","valueEqual","_backend","_name","tagsEqual","isEqual","_tags"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AACA;;;;;;;;IAEqBA,Y;AAQjB,4BAAc;AAAA;;AACV,aAAKC,KAAL;AACH;;;;gCAYO;AACJ,iBAAKC,cAAL,GAAsB,EAAtB;AACA,iBAAKC,YAAL,GAAoB,EAApB;AACA,iBAAKC,YAAL,GAAoB,EAApB;AACA,iBAAKC,UAAL,GAAkB,EAAlB;AACA,iBAAKC,YAAL,GAAoB,EAApB;AACA,iBAAKC,UAAL,GAAkB,EAAlB;AACH;;;kCAESC,I,EAAcC,K,EAAeC,I,EAAiB;AACpD,gBAAI,KAAKR,cAAL,CAAoBM,IAApB,MAA8BG,SAAlC,EAA6C;AACzC,qBAAKT,cAAL,CAAoBM,IAApB,IAA4B,CAA5B;AACH;AACD,iBAAKN,cAAL,CAAoBM,IAApB,KAA6BC,KAA7B;AACA,iBAAKN,YAAL,CAAkBK,IAAlB,IAA0BE,IAA1B;AACH;;;+BAEMF,I,EAAcI,K,EAAeF,I,EAAiB;AACjD,iBAAKN,YAAL,CAAkBI,IAAlB,IAA0BI,KAA1B;AACA,iBAAKP,UAAL,CAAgBG,IAAhB,IAAwBE,IAAxB;AACH;;;8BAEKF,I,EAAcI,K,EAAeF,I,EAAiB;AAChD,iBAAKJ,YAAL,CAAkBE,IAAlB,IAA0BI,KAA1B;AACA,iBAAKL,UAAL,CAAgBC,IAAhB,IAAwBE,IAAxB;AACH;;;sCAnCoBG,O,EAAuBD,K,EAAwB;AAChE,gBAAIE,aAAaD,QAAQE,QAAR,CAAiBb,cAAjB,CAAgCW,QAAQG,KAAxC,MAAmDJ,KAApE;AACA,gBAAIK,YAAa,iBAAEC,OAAF,CAAUL,QAAQE,QAAR,CAAiBZ,YAAjB,CAA8BU,QAAQG,KAAtC,CAAV,EAAwDH,QAAQM,KAAhE,CAAjB;AACA,mBAAOL,cAAcG,SAArB;AACH;;;qCAEmBJ,O,EAA+B;AAC/C,mBAAOA,QAAQE,QAAR,CAAiBb,cAAjB,CAAgCW,QAAQG,KAAxC,CAAP;AACH;;;;;;kBApBgBhB,Y","file":"backend.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport _ from 'lodash';\nimport LocalCounter from './counter';\n\nexport default class LocalBackend {\n    _counterValues: any;\n    _counterTags: any;\n    _timerValues: any;\n    _timerTags: any;\n    _gaugeValues: any;\n    _gaugeTags: any;\n\n    constructor() {\n        this.reset();\n    }\n\n    static counterEquals(counter: LocalCounter, value: number): boolean {\n        let valueEqual = counter._backend._counterValues[counter._name] === value;\n        let tagsEqual =  _.isEqual(counter._backend._counterTags[counter._name], counter._tags);\n        return valueEqual && tagsEqual;\n    }\n\n    static counterValue(counter: LocalCounter): number {\n        return counter._backend._counterValues[counter._name];\n    }\n\n    reset() {\n        this._counterValues = {};\n        this._counterTags = {};\n        this._timerValues = {};\n        this._timerTags = {};\n        this._gaugeValues = {};\n        this._gaugeTags = {};\n    }\n\n    increment(name: string, delta: number, tags: any): void {\n        if (this._counterValues[name] === undefined) {\n            this._counterValues[name] = 0;\n        }\n        this._counterValues[name] += delta;\n        this._counterTags[name] = tags;\n    }\n\n    record(name: string, value: number, tags: any): void {\n        this._timerValues[name] = value;\n        this._timerTags[name] = tags;\n    }\n\n    gauge(name: string, value: number, tags: any): void {\n        this._gaugeValues[name] = value;\n        this._gaugeTags[name] = tags;\n    }\n}\n"]}