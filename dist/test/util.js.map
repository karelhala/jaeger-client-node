{"version":3,"sources":["../../test/util.js"],"names":["describe","it","isNotOk","ipToInt","equal","removeLeadingZeros","results","encoding","mode","expectedTags","description","deepEqual"],"mappings":";;AAqBA;;AACA;;;;AACA;;;;;;AAEAA,SAAS,OAAT,EAAkB,YAAM;AACpBA,aAAS,SAAT,EAAoB,YAAM;AACtBC,WAAG,qCAAH,EAA0C,YAAM;AAC5C,yBAAOC,OAAP,CAAe,eAAMC,OAAN,CAAc,OAAd,CAAf;AACH,SAFD;;AAIAF,WAAG,2DAAH,EAAgE,YAAM;AAClE,yBAAOG,KAAP,CAAc,OAAO,EAAR,GAAc,CAA3B,EAA8B,eAAMD,OAAN,CAAc,WAAd,CAA9B;AACH,SAFD;;AAIAF,WAAG,6DAAH,EAAkE,YAAM;AACpE,yBAAOG,KAAP,CAAa,CAAC,CAAd,EAAiB,eAAMD,OAAN,CAAc,iBAAd,CAAjB;AACH,SAFD;AAGH,KAZD;;AAcAH,aAAS,oBAAT,EAA+B,YAAM;AACjCC,WAAG,oCAAH,EAAyC,YAAM;AAC3C,yBAAOG,KAAP,CAAa,GAAb,EAAkB,eAAMC,kBAAN,CAAyB,GAAzB,CAAlB;AACH,SAFD;;AAIAJ,WAAG,wCAAH,EAA6C,YAAM;AAC/C,yBAAOG,KAAP,CAAa,GAAb,EAAkB,eAAMC,kBAAN,CAAyB,GAAzB,CAAlB;AACH,SAFD;;AAIAJ,WAAG,4BAAH,EAAiC,YAAM;AACnC,yBAAOG,KAAP,CAAa,GAAb,EAAkB,eAAMC,kBAAN,CAAyB,MAAzB,CAAlB;AACH,SAFD;;AAIAJ,WAAG,wCAAH,EAA6C,YAAM;AAC/C,yBAAOG,KAAP,CAAa,GAAb,EAAkB,eAAMC,kBAAN,CAAyB,MAAzB,CAAlB;AACH,SAFD;AAGH,KAhBD;;AAkBAJ,OAAI,sEAAJ,EAA4E,YAAM;AAC9E,YAAIK,UAAU,4BAAa,EAAEC,UAAU,CAAC,MAAD,EAAS,QAAT,CAAZ,EAAgCC,MAAM,CAAC,SAAD,EAAY,SAAZ,CAAtC,EAAb,CAAd;AACA,YAAIC,eAAe,CACf,EAAEF,UAAU,MAAZ,EAAoBC,MAAM,SAA1B,EAAqCE,aAAa,4BAAlD,EADe,EAEf,EAAEH,UAAU,MAAZ,EAAoBC,MAAM,SAA1B,EAAqCE,aAAa,4BAAlD,EAFe,EAGf,EAAEH,UAAU,QAAZ,EAAsBC,MAAM,SAA5B,EAAuCE,aAAa,8BAApD,EAHe,EAIf,EAAEH,UAAU,QAAZ,EAAsBC,MAAM,SAA5B,EAAuCE,aAAa,8BAApD,EAJe,CAAnB;AAMA,qBAAOC,SAAP,CAAiBF,YAAjB,EAA+BH,OAA/B;AACH,KATD;AAUH,CA3CD;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"util.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {assert} from 'chai';\nimport Utils from '../src/util.js';\nimport combinations from './lib/combinations.js'\n\ndescribe('utils', () => {\n    describe('ipToInt', () => {\n        it('should convert malformed IP to null', () => {\n            assert.isNotOk(Utils.ipToInt('127.0'));\n        });\n\n        it('should convert an ip less than 2^32 to an unsigned number', () => {\n            assert.equal((127 << 24) | 1, Utils.ipToInt('127.0.0.1'));\n        });\n\n        it('should convert an ip greater than 2^32 to a negative number', () => {\n            assert.equal(-1, Utils.ipToInt('255.255.255.255'));\n        });\n    });\n\n    describe('removeLeadingZeros', () => {\n        it('should leave single 0 digit intact', () => {\n            assert.equal('0', Utils.removeLeadingZeros('0'));\n        });\n\n        it('should leave single non-0 digit intact', () => {\n            assert.equal('1', Utils.removeLeadingZeros('1'));\n        });\n\n        it('should strip leading zeros', () => {\n            assert.equal('1', Utils.removeLeadingZeros('0001'));\n        });\n\n        it('should convert all zeros to a single 0', () => {\n            assert.equal('0', Utils.removeLeadingZeros('0000'));\n        });\n    });\n\n    it ('combinations should generate all combinations given valid parameters', () => {\n        let results = combinations({ encoding: ['json', 'thrift'], mode: ['channel', 'request']});\n        let expectedTags = [\n            { encoding: 'json', mode: 'channel', description: 'encoding=json,mode=channel' },\n            { encoding: 'json', mode: 'request', description: 'encoding=json,mode=request' },\n            { encoding: 'thrift', mode: 'channel', description: 'encoding=thrift,mode=channel' },\n            { encoding: 'thrift', mode: 'request', description: 'encoding=thrift,mode=request' }\n        ];\n        assert.deepEqual(expectedTags, results);\n    });\n});\n"]}