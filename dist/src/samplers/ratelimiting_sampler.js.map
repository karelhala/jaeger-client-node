{"version":3,"sources":["../../../src/samplers/ratelimiting_sampler.js"],"names":["constants","RateLimitingSampler","maxTracesPerSecond","Error","maxBalance","_maxTracesPerSecond","_rateLimiter","name","operation","tags","decision","checkCredit","SAMPLER_TYPE_TAG_KEY","SAMPLER_TYPE_RATE_LIMITING","SAMPLER_PARAM_TAG_KEY","other","callback"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;IAAYA,S;;AACZ;;;;;;;;;;IAEqBC,mB;AAIjB,iCAAYC,kBAAZ,EAAwC;AAAA;;AACpC,YAAIA,qBAAqB,CAAzB,EAA4B;AACxB,kBAAM,IAAIC,KAAJ,6DAAoED,kBAApE,CAAN;AACH;AACD,YAAIE,aAAaF,qBAAqB,GAArB,GAA2B,GAA3B,GAAiCA,kBAAlD;;AAEA,aAAKG,mBAAL,GAA2BH,kBAA3B;AACA,aAAKI,YAAL,GAAoB,2BAAgBJ,kBAAhB,EAAoCE,UAApC,CAApB;AACH;;;;+BAEc;AACX,mBAAO,qBAAP;AACH;;;mCAEkB;AACf,mBAAU,KAAKG,IAAL,EAAV,4BAA4C,KAAKF,mBAAjD;AACH;;;kCAMSG,S,EAAmBC,I,EAAoB;AAC7C,gBAAIC,WAAW,KAAKJ,YAAL,CAAkBK,WAAlB,CAA8B,GAA9B,CAAf;AACA,gBAAID,QAAJ,EAAc;AACVD,qBAAKT,UAAUY,oBAAf,IAAuCZ,UAAUa,0BAAjD;AACAJ,qBAAKT,UAAUc,qBAAf,IAAwC,KAAKT,mBAA7C;AACH;AACD,mBAAOK,QAAP;AACH;;;8BAEKK,K,EAAyB;AAC3B,gBAAI,EAAEA,iBAAiBd,mBAAnB,CAAJ,EAA6C;AACzC,uBAAO,KAAP;AACH;;AAED,mBAAO,KAAKC,kBAAL,KAA4Ba,MAAMb,kBAAzC;AACH;;;8BAEKc,Q,EAA2B;AAC7B,gBAAIA,QAAJ,EAAc;AACVA;AACH;AACJ;;;4BAzBgC;AAC7B,mBAAO,KAAKX,mBAAZ;AACH;;;;;;kBAxBgBJ,mB","file":"ratelimiting_sampler.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport * as constants from '../constants.js';\nimport RateLimiter from '../rate_limiter.js';\n\nexport default class RateLimitingSampler {\n    _rateLimiter: RateLimiter;\n    _maxTracesPerSecond: number;\n\n    constructor(maxTracesPerSecond: number) {\n        if (maxTracesPerSecond < 0) {\n            throw new Error(`maxTracesPerSecond must be greater than 0.0.  Received ${maxTracesPerSecond}`);\n        }\n        let maxBalance = maxTracesPerSecond < 1.0 ? 1.0 : maxTracesPerSecond;\n\n        this._maxTracesPerSecond = maxTracesPerSecond;\n        this._rateLimiter = new RateLimiter(maxTracesPerSecond, maxBalance);\n    }\n\n    name(): string {\n        return 'RateLimitingSampler';\n    }\n\n    toString(): string {\n        return `${this.name()}(maxTracesPerSecond=${this._maxTracesPerSecond})`;\n    }\n\n    get maxTracesPerSecond(): number {\n        return this._maxTracesPerSecond;\n    }\n\n    isSampled(operation: string, tags: any): boolean {\n        let decision = this._rateLimiter.checkCredit(1.0);\n        if (decision) {\n            tags[constants.SAMPLER_TYPE_TAG_KEY] = constants.SAMPLER_TYPE_RATE_LIMITING;\n            tags[constants.SAMPLER_PARAM_TAG_KEY] = this._maxTracesPerSecond;\n        }\n        return decision;\n    }\n\n    equal(other: Sampler): boolean {\n        if (!(other instanceof RateLimitingSampler)) {\n            return false;\n        }\n\n        return this.maxTracesPerSecond === other.maxTracesPerSecond;\n    }\n\n    close(callback: ?Function): void {\n        if (callback) {\n            callback();\n        }\n    }\n}\n"]}