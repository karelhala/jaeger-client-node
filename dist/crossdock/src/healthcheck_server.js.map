{"version":3,"sources":["../../../crossdock/src/healthcheck_server.js"],"names":["HealthcheckServer","app","use","json","head","req","res","sendStatus","listen","log","require","main","module","healthcheck"],"mappings":";;;;;;AAqBA;;;;AACA;;;;AACA;;;;;;;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAMqBA,iB,GACjB,6BAAc;AAAA;;AACV,QAAIC,MAAW,wBAAf;AACAA,QAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,QAAIG,IAAJ,CAAS,GAAT,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBA,YAAIC,UAAJ,CAAe,GAAf;AACH,KAFD;;AAIAN,QAAIO,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnB,0BAAQC,GAAR,CAAY,oCAAZ;AACH,KAFD;AAGH,C;;kBAXgBT,iB;;;AAcrB,IAAKU,OAAD,CAAeC,IAAf,KAAwBC,MAA5B,EAAoC;AAChC,QAAIC,cAAc,IAAIb,iBAAJ,EAAlB;AACH","file":"healthcheck_server.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport Helpers from './helpers';\n\nexport default class HealthcheckServer {\n    constructor() {\n        let app: any = express();\n        app.use(bodyParser.json());\n        app.head('/', (req, res) => {\n            res.sendStatus(200);\n        });\n\n        app.listen(8080, () => {\n            Helpers.log('Healthcheck server on port 8080...');\n        });\n    }\n}\n\nif ((require: any).main === module) {\n    let healthcheck = new HealthcheckServer();\n}\n"]}